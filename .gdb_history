quit
b main
b removeElements
r
n
l
l
l
n
p *head
n
r
n
quit
b main
b removeElements
r
n
p p->next->next
p *p->next->next
n
p head
p *head
quit
b main
b removeElements
r
n
p *p
n
p *p
n
p val
p p->val
n
n
p *p
n
p *p
n
n
p *p
n
n
n
quit
b main
b removeElements
r
n
quit
b main
b removeElements
r
n
p head
p *head
p &head
p 2@head
p 2*head
p *head
p *head->next
p *head->next->next
p *head->next->next->next
quit
b main
b removeElements
r
n
r
n
p *p
p *p->next
quit
b main
b removeElements
r
n
p p->next
n
p aaa
quit
b main
b removeElements
r
n
r
n
p *p
n
quit
b main
quit
b mergeSortedArray
r
n
p A
p B
n
uit
quit
b mergeSortedArray
r
n
p A
p B
n
quit
b mergeSortedArray
r
n
p A
p B
n
p result
n
p currentA
p A.size()
n
r
n
p result
n
p result
n
quit
b mergeSortedArray
r
n
p rsult
p result
n
r
n
p result
n
p currentA
quit
b mergeSortedArray
r
n
p result
n
n
quit
b mergeSortedArray
n
r
n
quit
b mergeSortedArray
r
n
quit
b mergeSortedArray
r
n
p result
n
p aa
p *aa
p &aa
quit
b binarySearch
r
n
p array
n
p mid
p midIndex
n
pquit
quit
b binarySearch
r
n
quit
b strstr
r
n
p targetcount
n
p source.length()
n
n
p index
n
p index
n
p targetindex
p index
quit
b strstr
r
n
n
p index
p source
p count
n
p index
r
n
p target[targetindex]
p source[index]
n
p index
n
p index
l
l
quit
b strstr
r
n
b 40
n
p result
l
ll
l
l
quit
b strstr
r
n
p index
n
p index
n
r
n
p index
n
p index
n
p index
n
p index
n
p index
n
p index
n
p source[7]
r
n
p source[index]
p source[index+1]
n
p count
n
p index
n
p index
quit
